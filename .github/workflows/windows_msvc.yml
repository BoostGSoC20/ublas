name: "Windows MSVC"
on: [push, pull_request]

jobs:
  build:
     name: "${{matrix.config.version}} -std=c++${{matrix.config.cxxstd}}"
     runs-on: ${{matrix.config.os}}
     strategy:
       fail-fast: false
       matrix:
         config: 
           - {os: windows-2016, toolset: msvc, version: 14.16, cxxstd: 11}
           - {os: windows-2016, toolset: msvc, version: 14.16, cxxstd: 17}
           - {os: windows-2019, toolset: msvc, version: 14.25, cxxstd: 11}
           - {os: windows-2019, toolset: msvc, version: 14.25, cxxstd: 17}
           - {os: windows-2019, toolset: msvc, version: 14.25, cxxstd: latest}
             
     steps:
      - uses: actions/checkout@v2
        
      - name: Enable Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.2.0
        with:
          # VC++ compiler toolset version
          toolset: ${{matrix.config.version}}
        
      - name: Setup openCL
        shell: cmd
        run: |
          choco install wget
          wget -q http://registrationcenter-download.intel.com/akdlm/irc_nas/9022/opencl_runtime_16.1.1_x64_setup.msi
          start /wait msiexec /i opencl_runtime_16.1.1_x64_setup.msi /qn  /l*v msiexec2.log
          
          vcpkg --triplet x64-windows install opencl clblas
                    
      - name: Setup BOOST_ROOT
        shell: cmd
        run: |
          cd %GITHUB_WORKSPACE%
          cd ..
          git clone -b master --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          git submodule update --init tools/build
          git submodule update --init libs/config
          git submodule update --init tools/boostdep
          
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\numeric\ublas
          
          python tools/boostdep/depinst/depinst.py -I benchmarks numeric/ublas
          xcopy %GITHUB_WORKSPACE%\opencl.jam %USERPROFILE%
          xcopy %GITHUB_WORKSPACE%\clblas.jam %USERPROFILE%
          
          echo ::set-env name=BOOST_ROOT::%cd%
          
      - name: Setup Environment Variable
        shell: cmd
        run: |
          echo ::set-env name=PATH::C:\vcpkg\installed\x64-windows\bin;%PATH%
          echo ::set-env name=VCPKG_I::C:\vcpkg\installed\x64-windows\include
          echo ::set-env name=VCPKG_L::C:\vcpkg\installed\x64-windows\lib
          echo ::set-env name=TOOLSET::${{matrix.config.toolset}}-${{matrix.config.version}}    
                    
      - name: Prepare BOOST_ROOT
        shell: powershell
        run: |
          echo $env:TOOLSET
           # Creating %USERPROFILE%/user-config.jam file
          @'
          import os regex toolset ;
          local toolset = [ regex.split [ os.environ TOOLSET ] "-" ] ;
          local vcpkg_i = [ os.environ VCPKG_I ] ;
          local vcpkg_l = [ os.environ VCPKG_L ] ;
          using $(toolset[1]) : $(toolset[2-]:J="-") :  ;
          using opencl : : <include>$(vcpkg_i) <search>$(vcpkg_l) ;
          using clblas : : <include>$(vcpkg_i) <search>$(vcpkg_l) ;
          '@ | sc "$env:USERPROFILE/user-config.jam"          
      - name: Bootstrap BOOST_ROOT
        shell: cmd
        run: |
          cd %BOOST_ROOT%
          cmd /c bootstrap
          b2 -j8 headers
          
      - name: Test Benchmarks
        shell: cmd
        run: |
          cd %BOOST_ROOT%
          cd libs\numeric\ublas
          %BOOST_ROOT%\b2 -j 4 benchmarks toolset=%TOOLSET% cxxstd=${{matrix.config.cxxstd}} address-model=64
          
      - name: Test Tensor Examples
        shell: cmd
        if: matrix.config.cxxstd == '17' || matrix.config.cxxstd == '2a'
        run: |
          cd %BOOST_ROOT%
          cd libs\numeric\ublas
          %BOOST_ROOT%\b2 -j 4 examples/tensor toolset=%TOOLSET% cxxstd=${{matrix.config.cxxstd}} address-model=64
          
      - name: Test Tensor
        shell: cmd
        if: matrix.config.cxxstd == '17' || matrix.config.cxxstd == '2a'
        run: |
          cd %BOOST_ROOT%
          cd libs\numeric\ublas
          %BOOST_ROOT%\b2 -j 4 test/tensor toolset=%TOOLSET% cxxstd=${{matrix.config.cxxstd}} address-model=64
          
      - name: Test openCL
        shell: cmd
        run: |
          cd %BOOST_ROOT%
          cd libs\numeric\ublas
          %BOOST_ROOT%\b2 -j 4 test/opencl toolset=%TOOLSET% cxxstd=${{matrix.config.cxxstd}} address-model=64
          
      - name: Test uBLAS
        shell: cmd
        run: |
         cd %BOOST_ROOT%
         cd libs\numeric\ublas
         %BOOST_ROOT%\b2 -j 4 test toolset=%TOOLSET% cxxstd=${{matrix.config.cxxstd}} address-model=64
