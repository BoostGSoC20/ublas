name: Linux CI
# Trigger on Push to the repository, regardless of the branch.
# For fine tune, You can add specific branches or tags.
on: [push, pull_request]
  
jobs:
  build:
    name: "${{matrix.config.cxx}} -std=c++${{matrix.cxxstd}}"
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      # If any compiler fails to compile, continue CI for next compiler in matrix instead of failing early
      matrix:
        cxxstd: [11, 17, 2a]
        config: 
          - { cc: gcc-7, cxx: g++-7, toolset: gcc }
          - { cc: gcc-8, cxx: g++-8, toolset: gcc }
          - { cc: gcc-9, cxx: g++-9, toolset: gcc }
          - { cc: gcc-10, cxx: g++-10, toolset: gcc }
          - { cc: clang-6.0, cxx: clang++-6.0, toolset: clang }
          - { cc: clang-8, cxx: clang++-8, toolset: clang }
          - { cc: clang-9, cxx: clang++-9, toolset: clang }
          - { cc: clang-10, cxx: clang++-10, toolset: clang }
            
    steps:
    - uses: actions/checkout@v2
      # Checks out the source code, if not done, runner will not clone the repository
        
    - name: Set Environment Variables
      run: |
         echo ::set-env name=CLBLAS_PREFIX::${GITHUB_WORKSPACE}/CLBLAS
         echo ::set-env name=PATH::${GITHUB_WORKSPACE}/CLBLAS/bin:${PATH}
         echo ::set-env name=LD_LIBRARY_PATH::${GITHUB_WORKSPACE}/CLBLAS/lib:${LD_LIBRARY_PATH}
         
         echo ::set-env name=CC::${{matrix.config.cc}}
         echo ::set-env name=CXX::${{matrix.config.cxx}}
        
    - name: Install GCC-10
      if: matrix.config.cxx == 'g++-10'
      # Only run this step if g++-10 is found from matrix strategy
      run: |
         sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
         sudo apt update
         sudo apt-get install -y g++-10
         
    - name: Install Clang-10
      if: matrix.config.cxx == 'clang++-10' 
      # Only run this step if clang++-10 is found from matrix strategy
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-get update
        sudo apt-add-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main"
        sudo apt-get install -y clang-10
        
    - name: Setup OpenBLAS, CLBLAS and other utilities
      if: matrix.cxxstd == '17' && matrix.config.cxx == 'g++-9'
      # openBLAS, clBLAS will be used and codecoverage will be reported from only gcc-9 with C++17 standards
      # Due to this reason to fasten the build process, we skip this step on all other matrix configuration.
      # This is known fact that any CI offer only 1 openCL device and if we were to test all compilers for openCL
      # We would have to sequencially run the jobs that would make the build process very very slow.
      run: |
        sudo apt-get install -y lcov
        sudo apt-get install -y rpm2cpio
        sudo apt-get install -y libopenblas-base
        sudo apt-get install -y ocl-icd-opencl-dev
        sudo apt-get install -y opencl-headers
        sudo apt-get install -y clinfo
        sudo apt-get install -y cpio
        
        ${GITHUB_WORKSPACE}/.ci/install-ocl-ubuntu.sh
        ${GITHUB_WORKSPACE}/.ci/install-clblas.sh
        
        ${CXX} --version
        ${CC} --version
        
    - name: Prepare BOOST_ROOT
      if: matrix.cxxstd != '2a' || matrix.config.cxx == 'clang++-10' || matrix.config.cxx == 'g++-10'
      # `2a` flag is only usable for clang-10 and gcc-10, for others skip this process.
      run: |
        cd ${GITHUB_WORKSPACE}
        cd ..
        
        git clone -b master --depth 1 https://github.com/boostorg/boost.git boost-root
        cd boost-root
        
        git submodule update --init --jobs 8 tools/build
        git submodule update --init --jobs 8 libs/config
        git submodule update --init --jobs 8 tools/boostdep
        
        mkdir -p libs/numeric/
        cp -rp ${GITHUB_WORKSPACE}/. libs/numeric/ublas
        python tools/boostdep/depinst/depinst.py -I benchmarks numeric/ublas
        
        ./bootstrap.sh
        ./b2 -j 8 headers
        
        echo ::set-env name=BOOST_ROOT::${PWD}
        
    - name: Prepare Build
      if: matrix.cxxstd != '2a' || matrix.config.cxx == 'clang++-10' || matrix.config.cxx == 'g++-10'
      # `2a` flag is only usable for clang-10 and gcc-10, for others skip this process.
      run: |
        echo $BOOST_ROOT
        cd $BOOST_ROOT
        
        echo "using ${{ matrix.config.toolset }} : : ${{ matrix.config.cxx }} ;" >> ~/user-config.jam;
        echo "using clblas : : <include>${CLBLAS_PREFIX}/include <search>${CLBLAS_PREFIX}/lib ;" >> ~/user-config.jam;
        
        cat ~/user-config.jam
        
        cp ${GITHUB_WORKSPACE}/opencl.jam ~/
        cp ${GITHUB_WORKSPACE}/clblas.jam ~/
        
    - name: Test Benchmarks
      if: matrix.cxxstd != '2a' || matrix.config.cxx == 'clang++-10' || matrix.config.cxx == 'g++-10'
      # `2a` flag is only usable for clang-10 and gcc-10, for others skip this process.
      run: |
        cd $BOOST_ROOT
        cd libs/numeric/ublas
        $BOOST_ROOT/b2 -j 4 benchmarks toolset=${{matrix.config.toolset}} cxxstd=${{matrix.cxxstd}}
        
    - name: Test Tensor Examples
      if: matrix.cxxstd != '2a' || matrix.config.cxx == 'clang++-10' || matrix.config.cxx == 'g++-10'
      # `2a` flag is only usable for clang-10 and gcc-10, for others skip this process.
      run: |
        cd $BOOST_ROOT
        cd libs/numeric/ublas
        $BOOST_ROOT/b2 -j 4 examples/tensor toolset=${{matrix.config.toolset}} cxxstd=${{matrix.cxxstd}}
        
    - name: Test Tensor
      # `2a` flag is only usable for clang-10 and gcc-10, for others skip this process.
      if: matrix.cxxstd != '2a' || matrix.config.cxx == 'clang++-10' || matrix.config.cxx == 'g++-10'
      run: |
        cd $BOOST_ROOT
        cd libs/numeric/ublas
        $BOOST_ROOT/b2 -j 4 test/tensor toolset=${{matrix.config.toolset}} cxxstd=${{matrix.cxxstd}}

    - name: Test openCL
      if: matrix.cxxstd == '17' && matrix.config.cxx == 'g++-7'
      # We run openCL tests only on these compiler and standards for resons mentioned above.
      run: |
        cd $BOOST_ROOT
        cd libs/numeric/ublas
        $BOOST_ROOT/b2 -j 4 test/opencl toolset=${{matrix.config.toolset}} cxxstd=${{matrix.cxxstd}}
        
    - name: Test uBLAS
      if: matrix.cxxstd != '2a' || matrix.config.cxx == 'clang++-10' || matrix.config.cxx == 'g++-10'
      run: |
        cd $BOOST_ROOT
        cd libs/numeric/ublas
        $BOOST_ROOT/b2 -j 4 test toolset=${{matrix.config.toolset}} cxxstd=${{matrix.cxxstd}}
        
    - name: Report Code coverage
      if: matrix.cxxstd == '17' && matrix.config.cxx == 'g++-7'
      run: |
        ${GITHUB_WORKSPACE}/.ci/report_coverage.sh
        
        curl -s https://codecov.io/bash > cov.sh
        chmod +x cov.sh
        ./cov.sh -f coverage.info || echo "Codecov did not collect coverage reports"
